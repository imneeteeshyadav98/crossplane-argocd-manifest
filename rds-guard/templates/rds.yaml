{{- if .Values.rds.enabled }}
{{- $ns := default .Release.Namespace .Values.rds.namespace -}}

apiVersion: database.aws.crossplane.io/v1beta1
kind: RDSInstance
metadata:
  name: {{ default .Release.Name .Values.rds.name }}
  namespace: {{ $ns }}
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  deletionPolicy: {{ .Values.rds.deletionPolicy | default "Orphan" }}
  forProvider:
    allocatedStorage: {{ .Values.rds.forProvider.allocatedStorage }}
    autoMinorVersionUpgrade: {{ .Values.rds.forProvider.autoMinorVersionUpgrade }}
    backupRetentionPeriod: {{ .Values.rds.forProvider.backupRetentionPeriod }}
    caCertificateIdentifier: {{ .Values.rds.forProvider.caCertificateIdentifier | quote }}
    dbInstanceClass: {{ .Values.rds.forProvider.dbInstanceClass | quote }}
    deletionProtection: {{ .Values.rds.forProvider.deletionProtection }}
    enableIAMDatabaseAuthentication: {{ .Values.rds.forProvider.enableIAMDatabaseAuthentication }}
    engine: {{ .Values.rds.forProvider.engine | quote }}
    engineVersion: {{ .Values.rds.forProvider.engineVersion | quote }}
    masterUsername: {{ .Values.rds.forProvider.masterUsername | quote }}
    multiAZ: {{ .Values.rds.forProvider.multiAZ }}
    port: {{ .Values.rds.forProvider.port }}
    publiclyAccessible: {{ .Values.rds.forProvider.publiclyAccessible }}
    region: {{ .Values.rds.forProvider.region | quote }}
    storageEncrypted: {{ .Values.rds.forProvider.storageEncrypted }}
    storageType: {{ .Values.rds.forProvider.storageType | quote }}
    kmsKeyId: {{ .Values.rds.forProvider.kmsKeyId | default "" | quote }}
    dbSubnetGroupName: {{ .Values.rds.forProvider.dbSubnetGroupName | quote }}
    vpcSecurityGroupIds:
      {{- toYaml .Values.rds.forProvider.vpcSecurityGroupIds | nindent 6 }}
  providerConfigRef:
    name: {{ .Values.rds.providerConfigRefName | default "aws" | quote }}
  writeConnectionSecretToRef:
    name: {{ .Values.rds.connectionSecretName | default (printf "%s-db-secret" .Release.Name) }}
    namespace: {{ $ns }}
{{- end }}
