{{- if .Values.rds.enabled }}
apiVersion: database.aws.crossplane.io/v1beta1
kind: RDSInstance
metadata:
  name: {{ default .Release.Name .Values.rds.name }}
  namespace: {{ default .Release.Namespace .Values.rds.namespace }}
  annotations:
    # Put RDS after ProviderConfig to avoid creds timing issues in Argo CD
    argocd.argoproj.io/sync-wave: "2"
spec:
  forProvider:
    allocatedStorage: {{ .Values.rds.forProvider.allocatedStorage }}
    autoMinorVersionUpgrade: {{ .Values.rds.forProvider.autoMinorVersionUpgrade }}
    backupRetentionPeriod: {{ .Values.rds.forProvider.backupRetentionPeriod }}
    caCertificateIdentifier: {{ .Values.rds.forProvider.caCertificateIdentifier }}
    dbInstanceClass: {{ .Values.rds.forProvider.dbInstanceClass }}
    deletionProtection: {{ .Values.rds.forProvider.deletionProtection }}
    enableIAMDatabaseAuthentication: {{ .Values.rds.forProvider.enableIAMDatabaseAuthentication }}
    engine: {{ .Values.rds.forProvider.engine }}
    engineVersion: {{ .Values.rds.forProvider.engineVersion | quote }}
    masterUsername: {{ .Values.rds.forProvider.masterUsername }}
    multiAZ: {{ .Values.rds.forProvider.multiAZ }}
    port: {{ .Values.rds.forProvider.port }}
    publiclyAccessible: {{ .Values.rds.forProvider.publiclyAccessible }}
    region: {{ .Values.rds.forProvider.region }}
    storageEncrypted: {{ .Values.rds.forProvider.storageEncrypted }}
    storageType: {{ .Values.rds.forProvider.storageType }}
  providerConfigRef:
    name: {{ .Values.rds.providerConfigRefName | default "aws" }}
{{- end }}
